[gd_scene load_steps=19 format=3 uid="uid://dw10iobdk2oix"]

[ext_resource type="Texture2D" uid="uid://cv50qp1c54xec" path="res://sprites/player/idle sheet-Sheet.png" id="2_rrjsi"]
[ext_resource type="Texture2D" uid="uid://didlbv7lv4de8" path="res://sprites/player/itch run-Sheet sheet.png" id="3_b3yvx"]
[ext_resource type="Texture2D" uid="uid://cdpcx60j6rqpi" path="res://sprites/player/itch jump sheet-Sheet.png" id="4_dy10j"]
[ext_resource type="Texture2D" uid="uid://cnd04peygimh1" path="res://sprites/player/itch hurt 2 sheet-Sheet.png" id="5_x6yap"]
[ext_resource type="Script" path="res://scenes_and_scripts/player/stateMachine/states/GroundState.gd" id="6_5yriv"]
[ext_resource type="Script" path="res://scenes_and_scripts/player/stateMachine/CharacterStateMachine.gd" id="6_72ll3"]
[ext_resource type="Script" path="res://scenes_and_scripts/player/stateMachine/states/AirState.gd" id="8_cjao4"]
[ext_resource type="Script" path="res://scenes_and_scripts/player/stateMachine/states/LandingState.gd" id="9_yq3g1"]

[sub_resource type="GDScript" id="GDScript_41kh4"]
script/source = "extends CharacterBody2D

@export var SPEED:float = 200.0
@export var JUMP_VELOCITY:float = -300.0
@export var DOUBLE_JUMP_VELOCITY:float = -450.0

@onready var sprite : Sprite2D = $Sprite
@onready var animation : AnimationPlayer = $AnimationPlayer
#@onready var animation_tree : AnimationTree = $AnimationTree

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")

var afterJumpIsOnFloorMoment1 = 0
var afterJumpIsOnFloorMoment2 = 401
var has_double_jump : bool = false
var is_jump_pressed = [Input.is_action_pressed(\"jump1\"), Input.is_action_pressed(\"jump2\")]
var is_just_jump_pressed = [Input.is_action_just_pressed(\"jump1\"), Input.is_action_just_pressed(\"jump2\")]
var direction1 = Vector2.ZERO
var direction2 = Vector2.ZERO
var idle_stop = false


func _ready():
	get_viewport().content_scale_factor = 2.4
	#animation_tree.active = true
	#
#func anim_update(direction):
	#animation_tree.set(\"parameters/BlendSpace1D/blend_position\", direction.x)
	#
	#if not is_on_floor():
		#if not has_double_jump and (is_just_jump_pressed[0] or is_just_jump_pressed[1]):
			#animation_tree.set(\"parameters/conditions/can_and_do_double_jump\", true)
			#velocity.y = DOUBLE_JUMP_VELOCITY
		#elif has_double_jump:
			#animation_tree.set(\"parameters/conditions/can_and_do_double_jump\", false)
			#animation_tree.set(\"parameters/conditions/isnt_on_the_floor_and_no_jump\", true)
		#else:
			#animation_tree.set(\"parameters/conditions/isnt_on_the_floor\", true)
			#animation_tree.set(\"parameters/conditions/can_and_do_double_jump\", false)
			#
	#if is_on_floor():
		#has_double_jump = false
		#afterJumpIsOnFloorMoment2 = Time.get_ticks_msec()
		#var noJumpTime = afterJumpIsOnFloorMoment2 - afterJumpIsOnFloorMoment1
		#if (is_jump_pressed[0] or is_jump_pressed[1]) and noJumpTime > 400:
			#velocity.y = JUMP_VELOCITY
			#animation_tree.set(\"parameters/conditions/can_and_do_jump\", true)
			#animation_tree.set(\"parameters/conditions/is_idle\", false)
		#elif direction.x != 0:
			#animation_tree.set(\"parameters/conditions/is_moving\", true)
		#else:
			#animation_tree.set(\"parameters/conditions/is_moving\", false)
			#animation_tree.set(\"parameters/conditions/is_idle\", true)
			
	
func update_facing_direction():
	if direction1.x > 0 or direction2.x > 0:
		sprite.flip_h = false
	elif direction1.x < 0 or direction2.x < 0:
		sprite.flip_h = true

func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y += gravity * delta

	# Handle jump.
	if is_on_floor():
		afterJumpIsOnFloorMoment2 = Time.get_ticks_msec()
		has_double_jump = false
	var noJumpTime = afterJumpIsOnFloorMoment2 - afterJumpIsOnFloorMoment1
	
	if is_jump_pressed[0] or is_jump_pressed[1]:
		if is_on_floor() and noJumpTime > 400:
			velocity.y = JUMP_VELOCITY
			afterJumpIsOnFloorMoment1 = Time.get_ticks_msec()
			animation.play(\"jump\")
	elif (is_jump_pressed[0] or is_jump_pressed[1]) and not has_double_jump and not is_on_floor:
		velocity.y = DOUBLE_JUMP_VELOCITY
		animation.play(\"jump\")

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	direction1 = Input.get_vector(\"move_left1\", \"move_right1\", \"jump1\", \"move_down1\")
	direction2 = Input.get_vector(\"move_left2\", \"move_right2\", \"jump2\", \"move_down2\")
	if direction1.x != 0:
		velocity.x = direction1.x * SPEED
		animation.play(\"run\")
		#anim_update(direction1)
	elif direction2.x != 0:
		velocity.x = direction2.x * SPEED
		animation.play(\"run\")
		#anim_update(direction2)
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		animation.play(\"idle\")

	update_facing_direction()
	move_and_slide()
"

[sub_resource type="Animation" id="Animation_h16cy"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("2_rrjsi")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [18]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Sprite2D:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="Animation" id="Animation_sjjpc"]
resource_name = "fall"
length = 1.3
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("4_dy10j")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [19]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Sprite2D:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
}

[sub_resource type="Animation" id="Animation_xidr7"]
resource_name = "hurt"
length = 0.8
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("5_x6yap")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [7]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Sprite2D:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3, 4, 5, 6]
}

[sub_resource type="Animation" id="Animation_hk826"]
resource_name = "idle"
length = 1.9
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("2_rrjsi")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [18]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Sprite2D:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
}

[sub_resource type="Animation" id="Animation_m8qei"]
resource_name = "jump"
length = 0.8
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("4_dy10j")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [19]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Sprite2D:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3, 4, 5, 6]
}

[sub_resource type="Animation" id="Animation_smrdf"]
resource_name = "run"
length = 2.6
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("3_b3yvx")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [24]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Sprite2D:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 23]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_1cuur"]
_data = {
"RESET": SubResource("Animation_h16cy"),
"fall": SubResource("Animation_sjjpc"),
"hurt": SubResource("Animation_xidr7"),
"idle": SubResource("Animation_hk826"),
"jump": SubResource("Animation_m8qei"),
"run": SubResource("Animation_smrdf")
}

[sub_resource type="AnimationNodeStateMachine" id="AnimationNodeStateMachine_ju6by"]
states/End/position = Vector2(961, 280)
states/Start/position = Vector2(210, 280)
graph_offset = Vector2(0, 1.19766)

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_beqb8"]
radius = 3.96601
height = 15.864

[node name="player" type="CharacterBody2D"]
script = SubResource("GDScript_41kh4")

[node name="AnimationTree" type="AnimationTree" parent="."]
libraries = {
"": SubResource("AnimationLibrary_1cuur")
}
tree_root = SubResource("AnimationNodeStateMachine_ju6by")
anim_player = NodePath("../AnimationPlayer")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, 2)
scale = Vector2(1.765, 1.765)
shape = SubResource("CapsuleShape2D_beqb8")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = ExtResource("2_rrjsi")
offset = Vector2(11, -2)
hframes = 18

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_1cuur")
}
autoplay = "idle"

[node name="CharacterStateMachine" type="Node" parent="." node_paths=PackedStringArray("character", "currentState")]
script = ExtResource("6_72ll3")
character = NodePath("..")
currentState = NodePath("GroundState")

[node name="GroundState" type="Node" parent="CharacterStateMachine"]
script = ExtResource("6_5yriv")

[node name="AirState" type="Node" parent="CharacterStateMachine"]
script = ExtResource("8_cjao4")

[node name="LandingState" type="Node" parent="CharacterStateMachine"]
script = ExtResource("9_yq3g1")
